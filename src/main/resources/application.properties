# DB connectivity
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driverClassName=org.postgresql.Driver
# show SQL queries
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# alternatively, if you need to see bind values - use below configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE
# Initializes schema on each execution
spring.datasource.initialization-mode=embedded
# Database URL
#spring.datasource.url=jdbc:h2:mem:sbipdb
# H2 Drive class
#spring.datasource.driverClassName=org.h2.Driver
# Database Username
#spring.datasource.username=sa
# Database Password
#spring.datasource.password=password
#Enable H2 console
#spring.h2.console.enabled=true
# Spring MVC Hidden Method filter
spring.mvc.hiddenmethod.filter.enabled=true
# Disable the DDL generation
spring.jpa.hibernate.ddl-auto=none
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/sbip.p12
# The password used to generate the certificate
server.ssl.key-store-password=p@ssw0rd
# The alias mapped to the certificate
server.ssl.key-alias=sbip
# HTTPS Port
server.port=8443
captcha.secret.key=<enter_your_value_here>
spring.security.oauth2.client.registration.google.client-id=<enter_your_value_here>
spring.security.oauth2.client.registration.google.client-secret=<enter_your_value_here>
spring.security.oauth2.client.registration.google.scope=<enter_your_value_here>
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

